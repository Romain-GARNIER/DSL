package arduinoML.homemade;

import arduinoML.*;
import arduinoML.util.ArduinoMLSwitch;

import org.eclipse.emf.ecore.EObject;


/**
 * <!-- begin-user-doc -->
 * The <b>Switch</b> for the model's inheritance hierarchy.
 * It supports the call {@link #doSwitch(EObject) doSwitch(object)}
 * to invoke the <code>caseXXX</code> method for each class of the model,
 * starting with the actual class of the object
 * and proceeding up the inheritance hierarchy
 * until a non-null result is returned,
 * which is the result of the switch.
 * <!-- end-user-doc -->
 * @see arduinoML.ArduinoMLPackage
 * 
 */
public class ArduinoMLSwitchPrinter extends ArduinoMLSwitch<String> {
	public ArduinoMLSwitchPrinter() {
		if (modelPackage == null) {
			modelPackage = ArduinoMLPackage.eINSTANCE;
		}
	}


	/**
	 * Returns the result of interpreting the object as an instance of '<em>Brick</em>'.
	 * <!-- begin-user-doc -->
	 * This implementation returns null;
	 * returning a non-null result will terminate the switch.
	 * <!-- end-user-doc -->
	 * @param object the target of the switch.
	 * @return the result of interpreting the object as an instance of '<em>Brick</em>'.
	 * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
	 * 
	 */
	public String caseBrick(Brick object) {
		return "";
	}

	/**
	 * Returns the result of interpreting the object as an instance of '<em>Actuator</em>'.
	 * <!-- begin-user-doc -->
	 * This implementation returns null;
	 * returning a non-null result will terminate the switch.
	 * <!-- end-user-doc -->
	 * @param object the target of the switch.
	 * @return the result of interpreting the object as an instance of '<em>Actuator</em>'.
	 * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
	 * 
	 */
	public String caseActuator(Actuator object) {
		return "\tpinMode("+object.getPin()+", OUTPUT);\n";
	}

	/**
	 * Returns the result of interpreting the object as an instance of '<em>Sensor</em>'.
	 * <!-- begin-user-doc -->
	 * This implementation returns null;
	 * returning a non-null result will terminate the switch.
	 * <!-- end-user-doc -->
	 * @param object the target of the switch.
	 * @return the result of interpreting the object as an instance of '<em>Sensor</em>'.
	 * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
	 * 
	 */
	public String caseSensor(Sensor object) {
		return "\tpinMode("+object.getPin()+", INPUT);\n";
	}

	/**
	 * Returns the result of interpreting the object as an instance of '<em>App</em>'.
	 * <!-- begin-user-doc -->
	 * This implementation returns null;
	 * returning a non-null result will terminate the switch.
	 * <!-- end-user-doc -->
	 * @param object the target of the switch.
	 * @return the result of interpreting the object as an instance of '<em>App</em>'.
	 * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
	 * 
	 */
	public String caseApp(App object) {
		 StringBuilder sb = new StringBuilder();
		 sb.append("// Code generated by ArduinoML\n"
		 		+ "// Structural concepts\n"
				+ "void setup() {\n");
		 for(Brick b : object.getBricks())
			sb.append(doSwitch(b));
		 sb.append("}\n\n"
		 		+ "//Behavioral concepts\n"
		 		+ "long time=0; long debounce = 200;\n\n");
		 for(State s : object.getStates())
				sb.append(doSwitch(s));
		 sb.append("\nvoid loop() {state_"+object.getInitial().getName()+"();} // Entering init state");
		 return sb.toString();
	}
	
	/**
	 * Returns the result of interpreting the object as an instance of '<em>State</em>'.
	 * <!-- begin-user-doc -->
	 * This implementation returns null;
	 * returning a non-null result will terminate the switch.
	 * <!-- end-user-doc -->
	 * @param object the target of the switch.
	 * @return the result of interpreting the object as an instance of '<em>State</em>'.
	 * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
	 * 
	 */
	public String caseState(State object) {
		StringBuilder sb = new StringBuilder();
		 sb.append("void state_"+object.getName()+"() {\n");
		 for(Action a : object.getActions())
			 sb.append(doSwitch(a));
		 sb.append("\tboolean guard = millis() - time > debounce;\n"
		 		+ doSwitch(object.getTransition())
		 		+ "} \n");
		 return sb.toString();
	}

	/**
	 * Returns the result of interpreting the object as an instance of '<em>Action</em>'.
	 * <!-- begin-user-doc -->
	 * This implementation returns null;
	 * returning a non-null result will terminate the switch.
	 * <!-- end-user-doc -->
	 * @param object the target of the switch.
	 * @return the result of interpreting the object as an instance of '<em>Action</em>'.
	 * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
	 * 
	 */
	public String caseAction(Action object) {
		StringBuilder sb = new StringBuilder();
		 sb.append("\tdigitalWrite("
		 		+object.getActuator().getPin()
		 		+", "+object.getValue().getLiteral()
		 		+");\n");
		 return sb.toString();
	}

	/**
	 * Returns the result of interpreting the object as an instance of '<em>Transition</em>'.
	 * <!-- begin-user-doc -->
	 * This implementation returns null;
	 * returning a non-null result will terminate the switch.
	 * <!-- end-user-doc -->
	 * @param object the target of the switch.
	 * @return the result of interpreting the object as an instance of '<em>Transition</em>'.
	 * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
	 * 
	 */
	public String caseTransition(Transition object) {
		StringBuilder sb = new StringBuilder();
		 sb.append("\tif (digitalRead(" + object.getSensor().getPin() + ") == " + object.getValue().getLiteral() + " && guard ) {\n"
		 		 + "\t\ttime = millis(); state_"+object.getNext().getName()+"();\n"
		 		 + "\t} else { state_"+object.getState().getName()+"(); }\n");
		 return sb.toString();
	}

	/**
	 * Returns the result of interpreting the object as an instance of '<em>EObject</em>'.
	 * <!-- begin-user-doc -->
	 * This implementation returns null;
	 * returning a non-null result will terminate the switch, but this is the last case anyway.
	 * <!-- end-user-doc -->
	 * @param object the target of the switch.
	 * @return the result of interpreting the object as an instance of '<em>EObject</em>'.
	 * @see #doSwitch(org.eclipse.emf.ecore.EObject)
	 * 
	 */
	@Override
	public String defaultCase(EObject object) {
		return "";
	}

} //ArduinoMLSwitch
